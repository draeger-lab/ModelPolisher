dist: bionic
language: java
sudo: required
env:
- COMPOSE_FILE=docker-compose.devel.yml MODELS=$TRAVIS_BUILD_DIR/bigg_models_data/models
jdk:
- openjdk11
services:
- docker
notifications:
  email: false
  slack:
    secure: cDcaaZUSHsYvCx2vmVRdWa9iAphLR7qf4SMEJ8kkFfzF0FEwyu+mnXtv107bQ52y6HHldIxywIb7LIeC7v5eWFNVr8421JMZtTWGnEr26CpM3fEtcUGMOv/Mdlt+YJkGrCDxZHOUfM+NH10Z2n2KfJP9lt54g/AkPCBtOFUcHoN6Pffv/7vLVs34mLRhSKfw0T7tHyg7XLaVzfRtKfiyIA3ZyXr9296QtfJG4UiulTRRDaKSKHqZUKx60tlHBS04EtP6ykTgkZ1VFcI0EhaGtxtKFQh/Ox4dEpZwP+gbocsQyuOnazmZR8JU3/M2SberrBvANTNvQra4ppI36SGHMZJxD7/fY89yQ+CeOTjAXUeaD+kYwFJYZNuzt/DIOLN5ShSdANuph5R9RR4v9XCwuLGX7czPQGYsloY/J5Rj9B1mqPV3yE0byJoh7YOElqPh/AAJYftKR43Ecevy/Xl+Ljq8tbE7psKZ+q3qqZg95H2kQNwVQkQoSf+cKh80evjj9hB6DK76gNYoup9UnPsVtIGUbSlD4aFFbl4wU444t8y6SuXA4m/1jSriTkretXqEgG0+1ZJFp4eQUz4L8xIHdza2bVQH3gCqcSDfiyKp5LpxCYef71QkezY/KRBaXb8B0cJDR63cWU/FvbX1VmO6kD/OkZgW4EYqge0WTbVFSV0=
before_install:
- git clone https://github.com/SBRG/bigg_models_data
install:
- printf "FROM openjdk:11-slim\n\nCOPY ModelPolisher-2.1.jar /\nCMD \"/bin/sh\"" >
  docker/java_docker/Dockerfile
- gradle devel
- docker-compose up -d
- docker ps -a
before_script:
- echo "Waiting for databases"
- while ! pg_isready -h 0.0.0.0 -p 1310 > /dev/null; do sleep 1; done
- while ! pg_isready -h 0.0.0.0 -p 1013 > /dev/null; do sleep 1; done
- echo "Databases are up"
script:
- travis_wait docker-compose run -v $MODELS:/models polisher sh -c "java -jar /ModelPolisher-2.1.jar
  --input=/models/ecoli_core_model.xml --output=/models/out/ecoli_core_model.xml --annotate-with-bigg=true
  --sbml-validation=true --compression-type=GZIP && ls -lish models/out"
- travis_wait docker-compose run -v $MODELS:/models polisher sh -c "java -jar /ModelPolisher-2.1.jar
  --input=/models/yeast_7.00.xml --output=/models/out/yeast_7.00.xml --annotate-with-bigg=true
  --sbml-validation=true --compression-type=GZIP && ls -lish models/out"
- travis_wait docker-compose run -v $MODELS:/models polisher sh -c "java -jar /ModelPolisher-2.1.jar
  --input=/models/RECON1.xml --output=/models/out/RECON1.xml --annotate-with-bigg=true
  --sbml-validation=true --compression-type=GZIP && ls -lish models/out"
after_script:
- docker-compose down
git:
  depth: 1
