//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.04.27 at 01:32:33 PM CEST 
//


package edu.ucsd.sbrg.miriam.xjc;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.ucsd.sbrg.miriam.xjc package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.ucsd.sbrg.miriam.xjc
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Miriam }
     * 
     */
    public Miriam createMiriam() {
        return new Miriam();
    }

    /**
     * Create an instance of {@link ListOfTags }
     * 
     */
    public ListOfTags createListOfTags() {
        return new ListOfTags();
    }

    /**
     * Create an instance of {@link Miriam.Datatype }
     * 
     */
    public Miriam.Datatype createMiriamDatatype() {
        return new Miriam.Datatype();
    }

    /**
     * Create an instance of {@link Annotation }
     * 
     */
    public Annotation createAnnotation() {
        return new Annotation();
    }

    /**
     * Create an instance of {@link Resource }
     * 
     */
    public Resource createResource() {
        return new Resource();
    }

    /**
     * Create an instance of {@link Synonyms }
     * 
     */
    public Synonyms createSynonyms() {
        return new Synonyms();
    }

    /**
     * Create an instance of {@link Documentations }
     * 
     */
    public Documentations createDocumentations() {
        return new Documentations();
    }

    /**
     * Create an instance of {@link Documentation }
     * 
     */
    public Documentation createDocumentation() {
        return new Documentation();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Format }
     * 
     */
    public Format createFormat() {
        return new Format();
    }

    /**
     * Create an instance of {@link Resources }
     * 
     */
    public Resources createResources() {
        return new Resources();
    }

    /**
     * Create an instance of {@link Restrictions }
     * 
     */
    public Restrictions createRestrictions() {
        return new Restrictions();
    }

    /**
     * Create an instance of {@link Uri }
     * 
     */
    public Uri createUri() {
        return new Uri();
    }

    /**
     * Create an instance of {@link Tags }
     * 
     */
    public Tags createTags() {
        return new Tags();
    }

    /**
     * Create an instance of {@link Uris }
     * 
     */
    public Uris createUris() {
        return new Uris();
    }

    /**
     * Create an instance of {@link Elements }
     * 
     */
    public Elements createElements() {
        return new Elements();
    }

    /**
     * Create an instance of {@link Restriction }
     * 
     */
    public Restriction createRestriction() {
        return new Restriction();
    }

    /**
     * Create an instance of {@link Element }
     * 
     */
    public Element createElement() {
        return new Element();
    }

    /**
     * Create an instance of {@link ListOfTags.TagDefinition }
     * 
     */
    public ListOfTags.TagDefinition createListOfTagsTagDefinition() {
        return new ListOfTags.TagDefinition();
    }

}
